// <auto-generated />
using System;
using DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220421082357_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Concrete.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bilgisayar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Telefon"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kulaklık"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Aksesuar"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Asus Laptop",
                            Name = "Asus Laptop",
                            UnitPrice = 17000,
                            UnitsInStock = 150
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Iphone 11",
                            Name = "Iphone 11",
                            UnitPrice = 12000,
                            UnitsInStock = 10
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Samsung S20",
                            Name = "Samsung S20",
                            UnitPrice = 11000,
                            UnitsInStock = 45
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Lenovo Laptop",
                            Name = "Lenovo Laptop",
                            UnitPrice = 13000,
                            UnitsInStock = 80
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Kulaklık",
                            Name = "Kulaklık ",
                            UnitPrice = 500,
                            UnitsInStock = 25
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            Description = "Şarj Aleti",
                            Name = "Şarj Aleti ",
                            UnitPrice = 300,
                            UnitsInStock = 250
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Xiomi Redmi",
                            Name = "Xiomi Redmi ",
                            UnitPrice = 5000,
                            UnitsInStock = 20
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.HasOne("Entities.Concrete.Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
